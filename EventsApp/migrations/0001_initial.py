# Generated by Django 3.2.12 on 2022-12-05 17:49

import EventsApp.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events_PositionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimes', models.CharField(blank=True, max_length=100, null=True)),
                ('position_number', models.IntegerField(blank=True, null=True)),
                ('position_name', models.CharField(blank=True, max_length=100, null=True)),
                ('position_type', models.CharField(blank=True, max_length=100, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('no_of_position', models.IntegerField(blank=True, null=True)),
                ('position_cost', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventsappMasterTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('event_title', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('datetimes', models.CharField(blank=True, max_length=50, null=True)),
                ('event_type', models.IntegerField(blank=True, null=True)),
                ('province', models.CharField(blank=True, max_length=30, null=True)),
                ('skill', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_category', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_type', models.CharField(blank=True, max_length=30, null=True)),
                ('venue', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'EventsApp_master_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='master_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('event_type', models.CharField(blank=True, choices=[('Camp', 'Camp'), ('Charity', 'Charity'), ('Conditioning', 'Conditioning'), ('Development', 'Development'), ('Game/Session', 'Game/Session'), ('Online', 'Online'), ('Registration', 'Registration'), ('Social', 'Social'), ('Tournament', 'Tournament')], max_length=300, null=True)),
                ('registration_type', models.CharField(blank=True, choices=[('Drop-in', 'Drop-in'), ('Registration', 'Registration')], default='Drop-in', max_length=300, null=True)),
                ('datetimes', models.CharField(blank=True, max_length=100, null=True)),
                ('is_recurring', models.BooleanField(default=False, null=True)),
                ('datetimes_monday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_tuesday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_wednesday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_thursday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_friday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_saturday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_sunday', models.CharField(blank=True, max_length=100, null=True)),
                ('datetimes_all', models.TextField(blank=True, null=True)),
                ('datetimes_exceptions', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, max_length=300, null=True)),
                ('sport_type', models.CharField(blank=True, max_length=300, null=True)),
                ('position', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=300, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=300, null=True)),
                ('street', models.CharField(blank=True, max_length=300, null=True)),
                ('province', models.CharField(blank=True, max_length=300, null=True)),
                ('country', models.CharField(blank=True, max_length=300, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=300, null=True)),
                ('no_of_position', models.IntegerField(blank=True, null=True)),
                ('position_cost', models.IntegerField(blank=True, null=True)),
                ('sport_logo', models.CharField(blank=True, max_length=300, null=True)),
                ('current_datetimes', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'master_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SportsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sports_catgeory_text', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SportsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('img', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vm_name', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venue_description', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venue_street', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venuecity', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venue_province', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venue_country', models.CharField(blank=True, max_length=500, null=True)),
                ('vm_venue_zip', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_individual', models.BooleanField(default=False)),
                ('is_organization', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=40, null=True)),
                ('last_name', models.CharField(max_length=40, null=True)),
                ('is_mvp', models.BooleanField(default=False, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', EventsApp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='EventsApp.user')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('job_title', models.CharField(max_length=100, null=True)),
                ('website', models.CharField(max_length=100, null=True)),
                ('dob', models.CharField(blank=True, max_length=50, null=True)),
                ('concussion', models.CharField(blank=True, max_length=100, null=True)),
                ('is_student', models.CharField(blank=True, max_length=100, null=True)),
                ('participation_interest', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('sports_category', models.CharField(max_length=50, null=True)),
                ('sports_type', models.CharField(max_length=50, null=True)),
                ('sports_position', models.CharField(max_length=50, null=True)),
                ('sports_skill', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='EventsApp.user')),
                ('organization_name', models.CharField(max_length=50, null=True)),
                ('parent_organization_name', models.CharField(max_length=50, null=True)),
                ('registration_no', models.CharField(max_length=50, null=True)),
                ('type_of_organization', models.CharField(blank=True, max_length=50, null=True)),
                ('year_established', models.CharField(blank=True, max_length=50, null=True)),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('website', models.CharField(max_length=50, null=True)),
                ('gender_focus', models.CharField(max_length=50, null=True)),
                ('age_group', models.CharField(max_length=50, null=True)),
                ('participants', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SportsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sports_type_text', models.CharField(max_length=100)),
                ('sports_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.sportscategory')),
            ],
        ),
        migrations.CreateModel(
            name='Secondary_SportsChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport_type', models.CharField(blank=True, max_length=30, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('skill', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PositionAndSkillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_type', models.CharField(max_length=100)),
                ('skill_type', models.CharField(max_length=100)),
                ('sports_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.sportscategory')),
                ('sports_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.sportstype')),
            ],
        ),
        migrations.CreateModel(
            name='Organization_Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=100)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('all_day', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('position_type', models.CharField(blank=True, max_length=100, null=True)),
                ('skill', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_position', models.IntegerField(blank=True, null=True)),
                ('position_cost', models.FloatField(blank=True, null=True)),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('purchased', models.BooleanField(blank=True, default=False, null=True)),
                ('checkout_timer', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.master_table')),
                ('position_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.events_positioninfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField()),
                ('order_amount', models.FloatField()),
                ('payment', models.BooleanField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('--Select--', '--Select--'), ('Cash Pickup', 'Cash Pickup'), ('Card', 'Card')], default='--Select--', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('paymentId', models.CharField(blank=True, max_length=200, null=True)),
                ('orderId', models.CharField(blank=True, max_length=200, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(to='EventsApp.OrderItems')),
            ],
        ),
        migrations.AddField(
            model_name='master_table',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('invite_date', models.DateField(null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EventsApp.master_table')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Extra_Loctaions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='events_positioninfo',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.master_table'),
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('all_day', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('header', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geographical_scope', models.CharField(blank=True, choices=[('National', 'National'), ('Local', 'Local'), ('Provincial', 'Provincial')], max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('url', models.TextField(blank=True, null=True)),
                ('client', models.TextField(blank=True, null=True)),
                ('hit_count', models.IntegerField(blank=True, null=True)),
                ('max_hits', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
